plugins {
    id 'application'
    id 'java'
    id 'idea'
}

dependencies {
    implementation('org.slf4j:slf4j-api:2.0.16')
    implementation('ch.qos.logback:logback-classic:1.5.7')

    testImplementation('org.hamcrest:hamcrest:3.0')
    testImplementation(platform('org.junit:junit-bom:5.11.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.junit.jupiter:junit-jupiter-params')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

// --add-exports java.base/jdk.internal.vm=ALL-UNNAMED
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs = [
            "--add-exports", "java.base/jdk.internal.vm=ALL-UNNAMED",
            "--add-exports", "java.base/jdk.internal.access=ALL-UNNAMED",
            //"--add-exports", "java.base/jdk.internal.vm=loom.generators",
            //"--add-exports", "java.base/jdk.internal.access=loom.generators",
            "--enable-preview"
    ]
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    jvmArgs = [
            "--add-opens", "java.base/java.lang=ALL-UNNAMED",
            "--add-exports", "java.base/jdk.internal.vm=ALL-UNNAMED",
            "--add-exports", "java.base/jdk.internal.access=ALL-UNNAMED"
    ]
}

/*
idea {
    module {
        sourceDirs += file('src/main')
        testSources.from(file('src/test'))
    }
}
 */

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

application {
    // Define the main class for the application.
    mainClass = 'control.structures.continuations.CoIteratorMain'
    applicationDefaultJvmArgs = [
            "--add-opens", "java.base/java.lang=ALL-UNNAMED",
    ]
}
